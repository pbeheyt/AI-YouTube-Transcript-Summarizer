(()=>{var e={405:(e,t,o)=>{"use strict";o.r(t),o.d(t,{YoutubeTranscript:()=>g,YoutubeTranscriptDisabledError:()=>l,YoutubeTranscriptError:()=>i,YoutubeTranscriptNotAvailableError:()=>u,YoutubeTranscriptNotAvailableLanguageError:()=>d,YoutubeTranscriptTooManyRequestError:()=>s,YoutubeTranscriptVideoUnavailableError:()=>c});const r=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,n="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",a=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class i extends Error{constructor(e){super(`[YoutubeTranscript] 🚨 ${e}`)}}class s extends i{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class c extends i{constructor(e){super(`The video is no longer available (${e})`)}}class l extends i{constructor(e){super(`Transcript is disabled on this video (${e})`)}}class u extends i{constructor(e){super(`No transcripts are available for this video (${e})`)}}class d extends i{constructor(e,t,o){super(`No transcripts are available in ${e} this video (${o}). Available languages: ${t.join(", ")}`)}}class g{static fetchTranscript(e,t){var o,r,i,g,m;return r=this,i=void 0,m=function*(){const r=this.retrieveVideoId(e),i=yield fetch(`https://www.youtube.com/watch?v=${r}`,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":n})}),g=yield i.text(),m=g.split('"captions":');if(m.length<=1){if(g.includes('class="g-recaptcha"'))throw new s;if(!g.includes('"playabilityStatus":'))throw new c(e);throw new l(e)}const p=null===(o=(()=>{try{return JSON.parse(m[1].split(',"videoDetails')[0].replace("\n",""))}catch(e){return}})())||void 0===o?void 0:o.playerCaptionsTracklistRenderer;if(!p)throw new l(e);if(!("captionTracks"in p))throw new u(e);if((null==t?void 0:t.lang)&&!p.captionTracks.some((e=>e.languageCode===(null==t?void 0:t.lang))))throw new d(null==t?void 0:t.lang,p.captionTracks.map((e=>e.languageCode)),e);const v=((null==t?void 0:t.lang)?p.captionTracks.find((e=>e.languageCode===(null==t?void 0:t.lang))):p.captionTracks[0]).baseUrl,h=yield fetch(v,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":n})});if(!h.ok)throw new u(e);return[...(yield h.text()).matchAll(a)].map((e=>{var o;return{text:e[3],duration:parseFloat(e[2]),offset:parseFloat(e[1]),lang:null!==(o=null==t?void 0:t.lang)&&void 0!==o?o:p.captionTracks[0].languageCode}}))},new((g=void 0)||(g=Promise))((function(e,t){function o(e){try{a(m.next(e))}catch(e){t(e)}}function n(e){try{a(m.throw(e))}catch(e){t(e)}}function a(t){var r;t.done?e(t.value):(r=t.value,r instanceof g?r:new g((function(e){e(r)}))).then(o,n)}a((m=m.apply(r,i||[])).next())}))}static retrieveVideoId(e){if(11===e.length)return e;const t=e.match(r);if(t&&t.length)return t[1];throw new i("Impossible to retrieve Youtube video ID.")}}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,o),a.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};const{YoutubeTranscript:r}=o(405);let n=!1;const a=()=>{const e=document.querySelector("h1.ytd-watch-metadata");return e?e.textContent.trim():"Title not found"},i=()=>{const e=document.querySelector("#header-text #title.ytd-video-description-infocards-section-renderer");if(!e){const e=document.querySelector("ytd-channel-name yt-formatted-string#text");return e?e.textContent.trim():"Channel not found"}return e.textContent.trim()},s=()=>{const e=document.querySelector('meta[name="description"]');return e?e.getAttribute("content"):"Description not available"},c=()=>{try{console.log("Extracting comments...");const e=document.querySelectorAll("ytd-comment-thread-renderer");if(!e||0===e.length)return console.log("No comments found or comments not loaded yet"),"No comments available. Comments might be disabled for this video or not loaded yet.";console.log(`Found ${e.length} comments`);const t=20,o=[];for(let r=0;r<Math.min(e.length,t);r++){const t=e[r],n=t.querySelector("#author-text"),a=n?n.textContent.trim():"Unknown user",i=t.querySelector('#content-text, yt-attributed-string[id="content-text"]');let s="Comment text not found";if(i){const e=i.querySelectorAll("span.yt-core-attributed-string");s=e&&e.length>0?Array.from(e).map((e=>e.textContent.trim())).join(" "):i.textContent.trim()}const c=t.querySelector("#vote-count-middle"),l=c?c.textContent.trim():"0";o.push({author:a,text:s,likes:l})}return o}catch(e){return console.error("Error extracting comments:",e),`Error extracting comments: ${e.message}`}},l=async()=>new Promise((e=>{chrome.storage.local.get(["youtubeVideoData"],(t=>{t.youtubeVideoData?console.log("Clearing existing transcript data:",t.youtubeVideoData.videoId||"Unknown ID"):console.log("No existing transcript data found"),chrome.storage.local.remove("youtubeVideoData",(()=>{console.log("Existing transcript data cleared"),e()}))}))})),u=async()=>{try{"complete"!==document.readyState&&await new Promise((e=>{window.addEventListener("load",e)})),await new Promise((e=>setTimeout(e,1500))),console.log("Starting video data extraction...");const e=await(async()=>{try{const e=a(),t=i(),o=s(),n=window.location.href,u=new URLSearchParams(window.location.search).get("v");console.log("Extracting transcript for video ID:",u),console.log("From URL:",n),await l();const d=await r.fetchTranscript(n),g=(e=>Array.isArray(e)&&0!==e.length?e.map((e=>e.text.trim())).join(" ").replace(/\s+/g," "):"No transcript data available")(d);console.log("Transcript data extracted:",d.length,"segments"),console.log("Starting comment extraction...");const m=c();return console.log("Comment extraction complete, found:",Array.isArray(m)?m.length:"error"),{videoId:u,videoTitle:e,channelName:t,videoDescription:o,transcript:g,comments:m,transcriptLanguage:d.length>0?d[0].lang:"unknown",extractedAt:(new Date).toISOString()}}catch(e){console.error("Error extracting video data:",e);let t="Failed to extract transcript";return t=e.message&&e.message.includes("Transcript is disabled")?"Transcript is not available for this video. The creator may have disabled it.":e.message&&e.message.includes("No transcript available")?"No transcript is available for this video.":e.message&&e.message.includes("too many requests")?"YouTube is limiting transcript access due to too many requests. Please try again later.":e.message&&e.message.includes("unavailable")?"The video appears to be unavailable or private.":`Error getting transcript: ${e.message}`,{videoId:new URLSearchParams(window.location.search).get("v"),videoTitle:a(),channelName:i(),videoDescription:s(),transcript:t,comments:c(),error:!0,message:t,extractedAt:(new Date).toISOString()}}})();chrome.storage.local.set({youtubeVideoData:e},(()=>{console.log("YouTube video data saved to storage for video:",e.videoId),console.log("Data extraction timestamp:",e.extractedAt)}))}catch(e){console.error("Error in YouTube content script:",e),chrome.storage.local.set({youtubeVideoData:{error:!0,message:e.message||"Unknown error occurred",extractedAt:(new Date).toISOString()}})}chrome.storage.local.get(["youtubeVideoData"],(function(e){console.log("VERIFICATION - Stored data:",e.youtubeVideoData),e.youtubeVideoData&&e.youtubeVideoData.transcript?console.log("✅ Transcript successfully extracted"):console.log("❌ Transcript extraction failed"),e.youtubeVideoData&&Array.isArray(e.youtubeVideoData.comments)?console.log("✅ Comments successfully extracted:",e.youtubeVideoData.comments.length):console.log("❌ Comment extraction failed or no comments found")}))};chrome.runtime.onMessage.addListener(((e,t,o)=>(console.log("Message received in content script:",e),"ping"===e.action?(console.log("Ping received, responding with pong"),o({status:"pong",ready:n}),!0):"extractTranscript"===e.action?(console.log("Extract transcript request received"),u(),o({status:"Extracting transcript..."}),!0):void 0))),console.log("YouTube transcript extractor content script loaded"),(async()=>{try{console.log("YouTube transcript extractor content script initializing..."),n=!0,console.log("YouTube transcript extractor content script ready"),window.location.href.includes("youtube.com/watch")&&(console.log("YouTube video page detected, preparing for transcript extraction"),setTimeout(u,1500))}catch(e){console.error("Error initializing content script:",e)}})()})();