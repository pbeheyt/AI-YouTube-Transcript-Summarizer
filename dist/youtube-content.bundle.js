(()=>{var e={405:(e,t,r)=>{"use strict";r.r(t),r.d(t,{YoutubeTranscript:()=>p,YoutubeTranscriptDisabledError:()=>l,YoutubeTranscriptError:()=>i,YoutubeTranscriptNotAvailableError:()=>u,YoutubeTranscriptNotAvailableLanguageError:()=>d,YoutubeTranscriptTooManyRequestError:()=>s,YoutubeTranscriptVideoUnavailableError:()=>c});const a=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,o="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",n=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class i extends Error{constructor(e){super(`[YoutubeTranscript] üö® ${e}`)}}class s extends i{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class c extends i{constructor(e){super(`The video is no longer available (${e})`)}}class l extends i{constructor(e){super(`Transcript is disabled on this video (${e})`)}}class u extends i{constructor(e){super(`No transcripts are available for this video (${e})`)}}class d extends i{constructor(e,t,r){super(`No transcripts are available in ${e} this video (${r}). Available languages: ${t.join(", ")}`)}}class p{static fetchTranscript(e,t){var r,a,i,p,g;return a=this,i=void 0,g=function*(){const a=this.retrieveVideoId(e),i=yield fetch(`https://www.youtube.com/watch?v=${a}`,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":o})}),p=yield i.text(),g=p.split('"captions":');if(g.length<=1){if(p.includes('class="g-recaptcha"'))throw new s;if(!p.includes('"playabilityStatus":'))throw new c(e);throw new l(e)}const v=null===(r=(()=>{try{return JSON.parse(g[1].split(',"videoDetails')[0].replace("\n",""))}catch(e){return}})())||void 0===r?void 0:r.playerCaptionsTracklistRenderer;if(!v)throw new l(e);if(!("captionTracks"in v))throw new u(e);if((null==t?void 0:t.lang)&&!v.captionTracks.some((e=>e.languageCode===(null==t?void 0:t.lang))))throw new d(null==t?void 0:t.lang,v.captionTracks.map((e=>e.languageCode)),e);const h=((null==t?void 0:t.lang)?v.captionTracks.find((e=>e.languageCode===(null==t?void 0:t.lang))):v.captionTracks[0]).baseUrl,m=yield fetch(h,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":o})});if(!m.ok)throw new u(e);return[...(yield m.text()).matchAll(n)].map((e=>{var r;return{text:e[3],duration:parseFloat(e[2]),offset:parseFloat(e[1]),lang:null!==(r=null==t?void 0:t.lang)&&void 0!==r?r:v.captionTracks[0].languageCode}}))},new((p=void 0)||(p=Promise))((function(e,t){function r(e){try{n(g.next(e))}catch(e){t(e)}}function o(e){try{n(g.throw(e))}catch(e){t(e)}}function n(t){var a;t.done?e(t.value):(a=t.value,a instanceof p?a:new p((function(e){e(a)}))).then(r,o)}n((g=g.apply(a,i||[])).next())}))}static retrieveVideoId(e){if(11===e.length)return e;const t=e.match(a);if(t&&t.length)return t[1];throw new i("Impossible to retrieve Youtube video ID.")}}}},t={};function r(a){var o=t[a];if(void 0!==o)return o.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var a in t)r.o(t,a)&&!r.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};const{YoutubeTranscript:a}=r(405),o=()=>{const e=document.querySelector("h1.ytd-watch-metadata");return e?e.textContent.trim():"Title not found"},n=()=>{const e=document.querySelector("ytd-channel-name yt-formatted-string#text");return e?e.textContent.trim():"Channel not found"},i=()=>{const e=document.querySelector("ytd-text-inline-expander > yt-formatted-string");return e?e.textContent.trim():"Description not available"},s=()=>{const e=document.querySelector("#info-container ytd-video-primary-info-renderer #info");if(!e)return{views:"Unknown",date:"Unknown"};const t=e.textContent.trim(),r=t.match(/(\d+,?\d*)\s+views?/i),a=t.match(/([A-Za-z]+\s+\d+,?\s*\d*)/);return{views:r?r[1]:"Unknown",date:a?a[1]:"Unknown"}};chrome.runtime.onMessage.addListener(((e,t,r)=>{if("extractTranscript"===e.action)return c(),r({status:"Extracting transcript..."}),!0}));const c=async()=>{try{"complete"!==document.readyState&&await new Promise((e=>{window.addEventListener("load",e)})),await new Promise((e=>setTimeout(e,500))),console.log("Starting video data extraction...");const e=await(async()=>{try{const e=o(),t=n(),r=i(),c=s(),l=window.location.href;console.log("Extracting transcript from URL:",l);const u=await a.fetchTranscript(l),d=(e=>Array.isArray(e)&&0!==e.length?e.map((e=>{const t=Math.floor(e.offset/60),r=Math.floor(e.offset%60);return`[${t.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}] ${e.text}`})).join("\n\n"):"No transcript data available")(u);return console.log("Transcript data extracted:",u.length,"segments"),{videoTitle:e,channelName:t,videoDescription:r,views:c.views,publishDate:c.date,transcript:d,transcriptLanguage:u.length>0?u[0].lang:"unknown"}}catch(e){console.error("Error extracting video data:",e);let t="Failed to extract transcript";return t=e.message&&e.message.includes("Transcript is disabled")?"Transcript is not available for this video. The creator may have disabled it.":e.message&&e.message.includes("No transcript available")?"No transcript is available for this video.":e.message&&e.message.includes("too many requests")?"YouTube is limiting transcript access due to too many requests. Please try again later.":e.message&&e.message.includes("unavailable")?"The video appears to be unavailable or private.":`Error getting transcript: ${e.message}`,{videoTitle:o(),channelName:n(),videoDescription:i(),views:s().views,publishDate:s().date,transcript:t,error:!0,message:t}}})();chrome.storage.local.set({youtubeVideoData:e},(()=>{console.log("YouTube video data saved to storage:",e)}))}catch(e){console.error("Error in YouTube content script:",e),chrome.storage.local.set({youtubeVideoData:{error:!0,message:e.message||"Unknown error occurred"}})}chrome.storage.local.get(["youtubeVideoData"],(function(e){console.log("VERIFICATION - Stored data:",e.youtubeVideoData),e.youtubeVideoData&&e.youtubeVideoData.transcript?console.log("‚úÖ Transcript successfully extracted"):console.log("‚ùå Transcript extraction failed")}))};console.log("YouTube transcript extractor content script loaded"),window.location.href.includes("youtube.com/watch")&&(console.log("YouTube video page detected, preparing for transcript extraction"),setTimeout(c,1500))})();