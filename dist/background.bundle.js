(()=>{chrome.tabs.onUpdated.addListener((async(e,t,o)=>{if("complete"===t.status&&o.url)try{const t=await fetch(chrome.runtime.getURL("config.json")),r=(await t.json(),await chrome.storage.local.get(["aiTabId","scriptInjected"]));if(console.log("Tab updated:",o.url),console.log("Checking tab:",e,"against aiTabId:",r.aiTabId),console.log("URL includes claude.ai:",o.url.includes("claude.ai")),e===r.aiTabId&&!r.scriptInjected&&o.url.includes("claude.ai")){const t="dist/claude-content.bundle.js";console.log("Attempting to inject script:",t);try{await chrome.scripting.executeScript({target:{tabId:e},files:[t]}),console.log("✅ Script injection successful"),await chrome.storage.local.set({scriptInjected:!0})}catch(e){console.error("❌ Script injection failed:",e)}}}catch(e){console.error("Error:",e)}})),chrome.runtime.onInstalled.addListener((async()=>{const e={selectedPromptType:"academic"},t=await chrome.storage.local.get(Object.keys(e)),o={};for(const[r,c]of Object.entries(e))void 0===t[r]&&(o[r]=c);Object.keys(o).length>0&&await chrome.storage.local.set(o)}));chrome.runtime.onInstalled.addListener((()=>{chrome.contextMenus.create({id:"summarizeYouTubeVideo",title:"Summarize this YouTube Video with Claude",contexts:["page"],documentUrlPatterns:["*://*.youtube.com/watch?*"]})})),chrome.contextMenus.onClicked.addListener((async(e,t)=>{if("summarizeYouTubeVideo"===e.menuItemId)try{if(!await(async e=>{try{console.log("Checking if content script is loaded in tab",e);const t=await(async e=>new Promise((t=>{try{chrome.tabs.sendMessage(e,{action:"ping"},(e=>{chrome.runtime.lastError?(console.log("Content script not ready:",chrome.runtime.lastError),t(!1)):(console.log("Content script is ready, received:",e),t(!0))}))}catch(e){console.error("Error checking content script:",e),t(!1)}})))(e);return t?(console.log("Content script already loaded"),!0):(console.log("Content script not loaded, injecting..."),await chrome.scripting.executeScript({target:{tabId:e},files:["dist/youtube-content.bundle.js"]}),await new Promise((e=>setTimeout(e,500))),!0)}catch(e){return console.error("Error injecting content script:",e),!1}})(t.id))return void console.error("Failed to inject content script");const e=await chrome.storage.local.get(["selectedPromptType"]);await chrome.storage.local.clear(),await chrome.storage.local.set(e),console.log("Cleared previous data, preserved settings:",e),chrome.tabs.sendMessage(t.id,{action:"extractTranscript"},(e=>{chrome.runtime.lastError?console.error("Error sending message to content script:",chrome.runtime.lastError):console.log("Extract transcript command sent, response:",e)}));const{selectedPromptType:o}=e,r=await fetch(chrome.runtime.getURL("config.json")),c=await r.json(),a=c.claudeUrl,i=c.prompts[o]||c.prompts.academic;let n=!1,s=0;const l=15;for(;!n&&s<l;){await new Promise((e=>setTimeout(e,1e3)));const{youtubeVideoData:e}=await chrome.storage.local.get(["youtubeVideoData"]);if(e){n=!0;const e=await chrome.tabs.create({url:a,active:!1});await chrome.storage.local.set({aiTabId:e.id,scriptInjected:!1,prePrompt:i}),await chrome.tabs.update(e.id,{active:!0});break}s++}n||console.error("Failed to extract transcript after multiple attempts")}catch(e){console.error("Error during YouTube summarization:",e)}}))})();